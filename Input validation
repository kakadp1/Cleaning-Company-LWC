global class mma2023_AssessorEmailNotifications implements Database.Batchable<sObject> {
    global Database.QueryLocator start(Database.BatchableContext BC) {
        String queryString = 'Select ID, Survey__c, Is_5_Business_Days__c, Next_5_Business_Days__c, Is_15_Business_Days__c, Next_15_Business_Days__c, Is_10_Business_Days__c, Next_10_Business_Days__c, Application_Name_of_the_Survey__c from SurveyStatus__c where (Is_5_Business_Days__c = True OR Is_10_Business_Days__c = True OR Is_15_Business_Days__c = True)';
        return Database.getQueryLocator(queryString);
    }
    
    global void execute(Database.BatchableContext BC, List<sObject> scope) {
        OrgWideEmailAddress owa = [SELECT Id, Address, DisplayName FROM OrgWideEmailAddress WHERE DisplayName = 'Maturity Model Assessment' LIMIT 1];
        String owaId = owa.Id;

        List<SurveyStatus__c> allSurveyDetails = (List<SurveyStatus__c>) scope;

        // Determine the time when the batch job should be stopped (10 seconds from now)
        Long stopTime = System.now().addSeconds(10).getTime();

        Set<Id> setOfSurveyId = new Set<Id>();
        Map<Id, List<String>> allAdminEmailFromEachSurveyMap = new Map<Id, List<String>>();
        Map<Id, List<String>> allManagerEmailFromEachSurveyMap = new Map<Id, List<String>();
        Set<Id> setOfSurveyIdFor10Days = new Set<Id>();
        Map<Id, List<String>> allAdminEmailFromEachSurveyMapFor10Days = new Map<Id, List<String>>();
        Map<Id, List<String>> allManagerEmailFromEachSurveyMapFor10Days = new Map<Id, List<String>>();
        Set<Id> setOfSurveyIdFor15Days = new Set<Id>();
        Map<Id, List<String>> allAdminEmailFromEachSurveyMapFor15Days = new Map<Id, List<String>>();
        Map<Id, List<String>> allManagerEmailFromEachSurveyMapFor15Days = new Map<Id, List<String>();

        for (SurveyStatus__c eachSurvey : allSurveyDetails) {
            if (System.now().getTime() > stopTime) {
                // If the job has been running for 10 seconds, stop it
                System.abortJob(BC.getJobId());
                return;
            }

            if (eachSurvey.Is_5_Business_Days__c) {
                setOfSurveyId.add(eachSurvey.Survey__c);
            }
            if (eachSurvey.Is_10_Business_Days__c) {
                setOfSurveyIdFor10Days.add(eachSurvey.Survey__c);
            }
            if (eachSurvey.Is_15_Business_Days__c) {
                setOfSurveyIdFor15Days.add(eachSurvey.Survey__c);
            }

            // Continue processing the records
            // ... (Your existing code for processing eachSurvey)
        }
        
        // ... (Rest of your existing execute method)

    }
    
    global void finish(Database.BatchableContext BC) {
    }

    // Your other methods and code

}
